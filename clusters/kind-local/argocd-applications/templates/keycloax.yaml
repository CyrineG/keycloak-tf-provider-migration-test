apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: keycloakx
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    chart: keycloakx
    repoURL: https://codecentric.github.io/helm-charts
    targetRevision: 7.0.1
    helm:
      # https://github.com/codecentric/helm-charts/blob/master/charts/keycloakx/values.yaml
      valuesObject:
        replicas: 1
        # doesn't have revisionHistoryLimitCount: 0

        command:
          - "/opt/keycloak/bin/kc.sh"
          - "-v"
          - "start"
          - "--hostname=authx.local.dev"
          - "--hostname-port=80"
          -
        #for test
        extraContainers: |
          - name: postgres-test
            image: bitnamilegacy/postgresql
            imagePullPolicy: IfNotPresent
            env:
              - name: POSTGRES_DB
                value: keycloak
              - name: POSTGRES_USER
                value: postgres
              - name: POSTGRES_PASSWORD
                value: strongpass
            ports:
              - containerPort: 5432
                name: postgres      

        extraEnv: |
          - name: PROXY_ADDRESS_FORWARDING
            value: "true"
          - name: KC_HTTP_ENABLED
            value: "true" 
          - name: KC_CACHE
            value: local
          - name: KC_BOOTSTRAP_ADMIN_USERNAME
            value: admin
          - name: KC_BOOTSTRAP_ADMIN_PASSWORD
            value: adminpassword
          - name: KC_DB_URL
            value: jdbc:postgresql://localhost:5432/keycloak
          - name: KC_DB_USERNAME
            value: postgres
          - name: KC_DB
            value: postgres
          - name: KC_DB_PASSWORD
            value: strongpass
        #          - name: DB_USERNAME
        #            valueFrom:
        #              secretKeyRef:
        #                name: keycloakx-mssql-db-credentials
        #                key: username
        #          - name: KC_DB_PASSWORD
        #            valueFrom:
        #              secretKeyRef:
        #                name: keycloakx-mssql-db-credentials
        #                key: password
        #          - name: DB_HOST_NAME
        #            valueFrom:
        #              secretKeyRef:
        #                name: keycloakx-mssql-db-credentials
        #                key: hostname
        #          - name: DB_URL_PORT
        #            valueFrom:
        #              secretKeyRef:
        #                name: keycloakx-mssql-db-credentials
        #                key: port
        #          - name: DB_URL_DATABASE
        #            valueFrom:
        #              secretKeyRef:
        #                name: keycloakx-mssql-db-credentials
        #                key: database

#        ingress:
#          enabled: true
#          className: nginx
#          annotations:
#            kubernetes.io/ingress.class: nginx
#            nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
#            nginx.ingress.kubernetes.io/proxy-busy-buffers-size: "128k"
#            nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
#
#          rules:
#            - host: authx.dracie.tuev-nord.de
        resources:
          requests:
            cpu: "20m"
            memory: "570Mi"
          limits:
            cpu: "400m"
            memory: "1140Mi"

        topologySpreadConstraints: | #verify components
          - topologyKey: topology.kubernetes.io/zone
            maxSkew: 1
            whenUnsatisfiable: ScheduleAnyway
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: keycloak
          - topologyKey: kubernetes.io/hostname
            maxSkew: 1
            whenUnsatisfiable: ScheduleAnyway
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: keycloak

        podDisruptionBudget: #verify components
          enabled: true
          minAvailable: 1

  destination:
    server: "https://kubernetes.default.svc"
    namespace: keycloak
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true
